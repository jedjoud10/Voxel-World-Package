// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel VoxelMain
#pragma kernel VoxelFinal
#include "./GenerationShaders/Others/noises/base.cginc"

//Density function
float Density(float3 p, float3 lp)
{
    return p.y + 5 + sin(p.x * 0.2) * 5;
}
//Get the color, smoothness, and metallic all in one function
ColorSmoothnessMetallic GetCSM(float3 p, float3 lp, float3 n)
{
    ColorSmoothnessMetallic csm;
    csm.color = n;
    csm.sm = 0;
    return csm;
}
//This is ran for every intersecting edge in the volume, allows us to place any voxel detail on the surface
void PlaceVoxelDetailEdge(float3 p, float3 lp, float3 n) 
{
    VoxelDetail a;
    a.position = p;
    a.forward = n;
    a.size = 1;
    a.type = 0;
    if(hash13(p) > 0.8) detailsBuffer.Append(a);
}

#include "./GenerationShaders/Others/noises/end.cginc"